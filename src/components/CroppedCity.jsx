/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/cropped_city.glb -o src/components/CroppedCity.jsx -r public -k 
*/

import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";
import React, { useLayoutEffect, useRef } from "react";
import { Moon } from "./Moon";
import { Swarm } from "./Swarm";

export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export function CroppedCity(props) {
  const { nodes, materials } = useGLTF("/models/cropped_city.glb");

  const ref = useRef();
  const tl = useRef();

  const scroll = useScroll();

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // VERTICAL ANIMATION
    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        z: FLOOR_HEIGHT * (NB_FLOORS - 1) * 150,
      },
      0
    );
  }, []);

  return (
    <group
      {...props}
      dispose={null}
      ref={ref}
      position={[0, -20, 0]}
      rotation={[Math.PI, 0, Math.PI]}
    >
      <Moon position={[0, 8, 750]} scale={35} />
      <group
        name="Highrise_12"
        position={[-0.102, 0, 569.563]}
        rotation={[-Math.PI, 0.001, -Math.PI]}
      >
        <mesh
          name="Highrise_12-Mesh"
          geometry={nodes["Highrise_12-Mesh"].geometry}
          material={materials["default"]}
        />
        <mesh
          name="Highrise_12-Mesh_1"
          geometry={nodes["Highrise_12-Mesh_1"].geometry}
          material={materials["Material.001"]}
        />
        <mesh
          name="Highrise_12-Mesh_2"
          geometry={nodes["Highrise_12-Mesh_2"].geometry}
          material={materials["Material.013"]}
        />
        <mesh
          name="Highrise_12-Mesh_3"
          geometry={nodes["Highrise_12-Mesh_3"].geometry}
          material={materials["Material.012"]}
        />
        <mesh
          name="Highrise_12-Mesh_4"
          geometry={nodes["Highrise_12-Mesh_4"].geometry}
          material={materials["Material.009"]}
        />
        <mesh
          name="Highrise_12-Mesh_5"
          geometry={nodes["Highrise_12-Mesh_5"].geometry}
          material={materials["Material.010"]}
        />
        <mesh
          name="Highrise_12-Mesh_6"
          geometry={nodes["Highrise_12-Mesh_6"].geometry}
          material={materials["Material.011"]}
        />
        <mesh
          name="Highrise_12-Mesh_7"
          geometry={nodes["Highrise_12-Mesh_7"].geometry}
          material={materials["Material.002"]}
        />
        <mesh
          name="Highrise_12-Mesh_8"
          geometry={nodes["Highrise_12-Mesh_8"].geometry}
          material={materials["Material.003"]}
        />
        <mesh
          name="Highrise_12-Mesh_9"
          geometry={nodes["Highrise_12-Mesh_9"].geometry}
          material={materials["Material.004"]}
        />
        <mesh
          name="Highrise_12-Mesh_10"
          geometry={nodes["Highrise_12-Mesh_10"].geometry}
          material={materials["Material.005"]}
        />
        <mesh
          name="Highrise_12-Mesh_11"
          geometry={nodes["Highrise_12-Mesh_11"].geometry}
          material={materials["Material.006"]}
        />
        <mesh
          name="Highrise_12-Mesh_12"
          geometry={nodes["Highrise_12-Mesh_12"].geometry}
          material={materials["Material.007"]}
        />
        <mesh
          name="Highrise_12-Mesh_13"
          geometry={nodes["Highrise_12-Mesh_13"].geometry}
          material={materials["Material.008"]}
        />
        <mesh
          name="Highrise_12-Mesh_14"
          geometry={nodes["Highrise_12-Mesh_14"].geometry}
          material={materials["Material.014"]}
        />
        <mesh
          name="Highrise_12-Mesh_15"
          geometry={nodes["Highrise_12-Mesh_15"].geometry}
          material={materials["Scene_-_Root.006"]}
        />
        <mesh
          name="Highrise_12-Mesh_16"
          geometry={nodes["Highrise_12-Mesh_16"].geometry}
          material={materials["Scene_-_Root"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/cropped_city.glb");
